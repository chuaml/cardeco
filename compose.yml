services:
  mysql-dev:
    profiles:
      - dev
    image: mysql:8.0.41
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: cardeco_dev  # db name to create/use
      MYSQL_USER: cardeco-app
      MYSQL_PASSWORD: cardeco-app
    volumes:
      - ./db/cardeco.sql:/docker-entrypoint-initdb.d/cardeco.sql:ro  #init db if none exist
      - cardeco-dev-data:/var/lib/mysql  #
      - ./db/dump:/var/tmp/dump/  #db backup
    post_start:  # wait t seconds then backup db, remove old files and keep top n recent backup file
      - command: sh -c 'sleep 5 && mysqldump -h 127.0.0.1 -u root -ptoor cardeco_dev --lock-all-tables | gzip > /var/tmp/dump/cardeco_dev.db.dump.$(date --utc +"%Y-%m-%d_%H%M%S").sql.gz && cd /var/tmp/dump/ && ls -t | tail -n +61 | xargs -I {} rm -f "{}"'
        user: root
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u ${MYSQL_USER} -p ${MYSQL_PASSWORD}"]
      interval: 60s
      retries: 2
      start_period: 1s
      timeout: 5s


  app-dev:
    profiles:
      - dev
    depends_on:
      mysql-dev:
        condition: service_started   # service_started | service_healthy to skip or wait for db ready respectively
        restart: true
    build:
      dockerfile: ./Dockerfile
      target: dev_app  # image variant
    ports:
      - 127.0.0.1:8082:80
      ## - 127.0.0.1:9003:9003  # do NOT enable this for XDebug, as it stop XDebug from working on host machine
    working_dir: /var/www/html
    volumes:
      # - ./:/var/www/html  ## avoid using bind-mount for realtime watch on file changes
      - ./config.dev/php-dev-override.ini:/usr/local/etc/php/conf.d/php-dev-override.ini:ro  ## for override part of php.ini
      - ./config.dev/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro  # RO readonly
    environment:
      IS_PRODUCTION: 0
      MYSQL_HOST: mysql-dev
      MYSQL_USER: cardeco-app
      MYSQL_PASSWORD: cardeco-app
      MYSQL_DB: cardeco_dev
    extra_hosts:
      - "host.docker.internal:host-gateway"  # for Linux machine to use Xdebug
    develop:
      watch:   ## dedicated watch mode using  `docker compose up --watch`  flag
        - action: sync
          path: ./
          target: /var/www/html
          ignore:
            - vendor/
            - node_modules/
            - public/
            - upload/
        - action: rebuild
          path: composer.json
        - action: sync+restart
          path: ./config.dev/
          target: /usr/local/etc/php/conf.d/php-dev-override.ini:ro


volumes:
  cardeco-dev-data: