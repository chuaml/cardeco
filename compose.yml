services:
  mysql:
    profiles:
      - production
    image: mysql:8.0.41
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: cardeco  # db name to create/use
      MYSQL_USER: cardeco-app
      MYSQL_PASSWORD: cardeco-app
    volumes:
      - ./db/cardeco.sql:/docker-entrypoint-initdb.d/dump.sql #init db if none exist
      - cardeco-data:/var/lib/mysql   #
    ports:
      - "3306:3306"

  app:
    profiles:
      - production
    image: cardeco:latest
    ports:
      - 127.0.0.1:8080:80   #
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html  ## for realtime watch on file changes
      - ./xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro  # RO readonly
    environment:
      IS_PRODUCTION: 1
      MYSQL_HOST: mysql
      MYSQL_USER: cardeco-app
      MYSQL_PASSWORD: cardeco-app
      MYSQL_DB: cardeco
    extra_hosts:
      - host.docker.internal:host-gateway



  mysql-dev:
    profiles:
      - dev
    image: mysql:8.0.41
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: cardeco_dev  # db name to create/use
      MYSQL_USER: cardeco-app
      MYSQL_PASSWORD: cardeco-app
    volumes:
      - ./db/cardeco.sql:/docker-entrypoint-initdb.d/cardeco.sql #init db if none exist
      - cardeco-dev-data:/var/lib/mysql  #
    ports:
      - "3308:3306"

  app-dev:
    profiles:
      - dev
    build:
      dockerfile: ./Dockerfile
      target: dev_app  # image variant
    ports:
      - 127.0.0.1:8082:80
      - 127.0.0.1:9003:9003  # xdebug
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html  ## for realtime watch on file changes
      - ./xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro  # RO readonly
    environment:
      IS_PRODUCTION: 0
      MYSQL_HOST: mysql-dev
      MYSQL_USER: cardeco-app
      MYSQL_PASSWORD: cardeco-app
      MYSQL_DB: cardeco_dev
    develop:
      watch:
        - action: sync # Sync changes to the container
          path: ./ # Path to watch on the host
          target: /var/www/html # Path inside the container
          ignore:
            - ./vendor
        - action: rebuild # Rebuild the image on changes
          path: ./composer.json # Path to watch on the host
          target: /var/www/html/composer.json # Path inside the container
        - action: rebuild # Rebuild the image on changes
          path: ./Dockerfile # Path to watch on the host
    extra_hosts:
      - host.docker.internal:host-gateway

volumes:
  cardeco-production-data:
  cardeco-dev-data: